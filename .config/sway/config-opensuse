#
# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
#xwayland disable

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
#set $term alacritty --config-file /etc/alacritty/alacritty.yml

#exec foot --server
set $term foot
exec earbuds -d -k
#exec mako
#exec autoime
#exec kanshi

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
# it is set in config.d/50-openSUSE.conf

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg ~/earth_h.jpg tile
#output * bg ~/pillars.png center
#output * bg #00ff00 solid_color
font pango:Ubuntu Nerd Font 11
seat seat0 xcursor_theme "Bibata-Modern-Amber"
#output eDP-1 mode 1920x1080@60.020Hz adaptive_sync on

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
input type:keyboard {
    xkb_layout us,de,jp
    xkb_options grp:alt_shift_toggle
    #xkb_numlock enabled
}
input type:touchpad {
    dwt enabled
    tap enabled
    natural_scroll enabled
    #tap_button_map lmr
}
bindgesture swipe:3:right workspace prev
bindgesture swipe:3:left workspace next

input type:pointer {
    #dwt enabled
    #tap enabled
    natural_scroll enabled
    #tap_button_map lmr
}
#input "117:40979:Galaxy_Buds_Live_(EBCD)_(AVRCP)" {
#    events disabled
#}

#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $$term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    #bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    #bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    #bindsym $mod+b splith
    #bindsym $mod+v splitv
    bindsym $mod+q split toggle
    bindsym $mod+Escape split none

    # Switch the current container between different layout styles
    #bindsym $mod+s layout stacking
    #bindsym $mod+t layout tabbed
    bindsym $mod+t layout toggle tabbed splith splitv

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent/child container
    bindsym $mod+a focus parent
    bindsym $mod+z focus child
#
# sticky toggle
bindsym $mod+Shift+s sticky toggle


# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad, exec "pkill -RTMIN+7 waybar"

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show, exec "pkill -RTMIN+7 waybar" 
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 100px
    bindsym $down resize grow height 100px
    bindsym $up resize shrink height 100px
    bindsym $right resize grow width 100px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 100px
    bindsym Down resize grow height 100px
    bindsym Up resize shrink height 100px
    bindsym Right resize grow width 100px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#bindsym --release $mod+r mode "default"
floating_modifier $mod inverse


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# it is set in config.d/50-openSUSE.conf
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}


####################################################################################################
include /etc/sway/config.d/*.conf
#include ~/.config/sway/config.d/*
####################################################################################################

#### Default openSUSE config for sway
# Copy this to ~/.config/sway/config.d/
# or leave `include /etc/sway/config.d/*`
# in your local config file

# wofi as application launcher
# set $menu wofi --show drun,run
set $menu rofi -config $XDG_CONFIG_HOME/rofi/menu.rasi -sidebar-mode -show combi

# rofimoji config
#bindsym $mod+i exec rofimoji
bindsym $mod+i exec rofimoji --selector-args="-theme sidebar" --files ~/.config/rofimoji/kaomoji.csv
bindsym $mod+e exec rofimoji --selector-args="-theme sidebar" --files emojis
bindsym $mod+n exec rofimoji --selector-args="-theme sidebar -font 'UbuntuMono Nerd Font 14'" --files ~/.config/rofimoji/nerdfont.csv 
# ~/.local/lib/python3.10/site-packages/picker/data
# ~/.config/rofimoji.rc
# cat * | grep -E -o  "'.' i_[a-z_]*" | tr -d "'" | sed "s# i_# #" >> nerdfont.csv


# openSUSE wallpaper
# output * bg /usr/share/wallpapers/default-1920x1080.jpg fill

# Idle configuration
# loginctl lock-session <== lock
# systemctl suspend <== before-sleep
# feedc0de cafebabe c00010ff cafed00d deadc0de decafbad 1337c0de badc0ffe cafec0de 600dcafe
exec swayidle -w \
     timeout 300 'swaylock -f -c badc0ffe' \
     timeout 600 'swaymsg "output * power off"' \
         resume 'swaymsg "output * power on"' \
            lock 'swaylock -f -c c0ffee' \
     before-sleep 'swaylock -f -c decaff'
     #before-sleep 'loginctl lock-session $XDG_SESSION_ID' \
     #lock 'ponymix --output mute && swaylock -f -c 589df6'
            #lock 'swaylock -f -c c0ffee' \
     #timeout 300 'swaylock -f -S --effect-pixelate 10 --grace 10' \

bindsym --to-code {
    $mod+b splith
    $mod+v splitv
}

#
# Sound / Media keys / Sink
#
set $is audio-speakers
set $hs string:synchronous:speaker
set $notify-speaker notify-send " " -c "bar" -i $is -h $hs
set $notify-volume $notify-speaker -h int:value:$(pamixer --get-volume)
set $notify-toggle $notify-speaker -h int:value:$(pamixer --get-mute | grep -q t && echo 0 || pamixer --get-volume)
#
#exec pactl set-sink-mute @DEFAULT_SINK@ 1 #default muted
bindsym XF86AudioLowerVolume exec pamixer --allow-boost -ud 5 && $notify-volume
bindsym XF86AudioRaiseVolume exec pamixer --allow-boost -ui 5 && $notify-volume
bindsym XF86AudioMute exec pamixer --toggle-mute && $notify-toggle

#
# Mic / Push to talk / Source
#
set $mic "--default-source"
set $im deepin-voice-recorder
set $hm string:synchronous:mic
set $notify-mic  notify-send " " -c "bar" -i $im -h $hm
set $notify-mic-volume $notify-mic -h int:value:$(pamixer --get-volume $mic)
set $notify-mic-toggle $notify-mic -h int:value:$(pamixer --get-mute $mic | grep -q t && echo 0 || pamixer --get-volume $mic)
#
#exec pactl set-source-mute @DEFAULT_SOURCE@ 1 # default: muted
bindsym F4 exec pactl set-source-mute @DEFAULT_SOURCE@ 0 # unmute mic
bindsym --release F4 exec pactl set-source-mute @DEFAULT_SOURCE@ 1 # mute mic
bindsym Shift+XF86AudioLowerVolume exec pamixer --allow-boost -ud 5 $mic && $notify-mic-volume
bindsym Shift+XF86AudioRaiseVolume exec pamixer --allow-boost -ui 5 $mic && $notify-mic-volume
bindsym Shift+XF86AudioMute exec pamixer --toggle-mute $mic && $notify-mic-toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle && $notify-mic-toggle

#
# Screen/display Brightness
#
set $hd string:synchronous:display
set $display-level int:value:$((`brightnessctl get`*100/`brightnessctl m`))
set $notify-display notify-send " " -c "bar" -i display -h $hd -h $display-level
#
bindsym XF86MonBrightnessDown exec brightnessctl -q set 5%- && $notify-display
bindsym XF86MonBrightnessUp exec brightnessctl -q set +5% && $notify-display

#bindsym XF86AudioRaiseVolume exec pamixer --allow-boost -ui 2 && dc -e "[`pamixer --get-volume`]sM 100d `pamixer --get-volume`<Mp" > $SWAYSOCK.wob
#bindsym XF86AudioLowerVolume exec pamixer --allow-boost -ud 2 && dc -e "[`pamixer --get-volume`]sM 100d `pamixer --get-volume`<Mp" > $SWAYSOCK.wob
#bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob )

# Media player controls
bindsym --no-warn XF86AudioPlay exec playerctl play-pause
bindsym --no-warn XF86AudioNext exec playerctl next
bindsym --no-warn XF86AudioPrev exec playerctl previous


# mpv mode
bindsym $mod+F12 Mode "mpv"
mode "mpv" {
    bindsym F1 [con_mark="drop-term"] scratchpad show
    bindsym $mod+h focus left
    bindsym $mod+l focus right
    bindsym $mod+j focus down
    bindsym $mod+k focus up

    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9

    bindsym 1 exec playerctl -p mpv position 4-
    bindsym 3 exec playerctl -p mpv position 10-
    bindsym 2 exec playerctl -p mpv play-pause
    bindsym Escape mode "default"
}

#clipboard config
#exec wl-paste -t text --watch clipman --notify store -P
#bindsym F10 exec clipman --notify pick --tool="rofi"
#bindsym $mod+p exec rofi -modi "snippet":"~/rofi-json/rofi-json.sh clipman.json" -show "snippet"
#exec copyq --start-server
#bindsym $mod+p exec ~/rofi-copyq/rofi-copyq
#waybar config
exec wl-paste -p --watch pkill -SIGRTMIN+1 waybar
exec wl-paste --watch pkill -SIGRTMIN+2 waybar

# wifi and bluetooth
bindsym F10 exec ~/.config/rofi/rofi-bluetooth/rofi-bluetooth
bindsym Shift+F10 exec ~/.config/rofi/networkmanager-dmenu/networkmanager_dmenu

# dropdown console
bindsym Mod4+F1 exec alacritty --title=dock
for_window [title="dock"] floating enable, move scratchpad, scratchpad show, mark "drop-term", \
    resize set width 100 ppt height 60 ppt, \
    move position 0 ppt 0 ppt
bindsym F1 [con_mark="drop-term"] scratchpad show, exec "pkill -RTMIN+7 waybar" 

# Screenshot
bindsym $mod+Print exec 'grimshot copy area'
bindsym $mod+Shift+Print exec 'grimshot save output'
bindsym Print exec 'grim -g "$(slurp)" - |  tesseract stdin stdout -l eng | wl-copy'

# power mode
bindsym $mod+0 exec rofi -show power -modi power:~/.config/rofi/rofi-power-menu/rofi-power-menu -config ~/.config/rofi/hotkey.rasi
#bindsym $mod+0 mode "$power"
#set $power (l)ock, (e)xit, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
#mode "$power" {
#    bindsym l exec swaylock -f -c c0ffee, mode "default"
#    bindsym e exec swaymsg exit, mode "default"
#    bindsym s exec swaylock -f -c c0ffee && systemctl suspend, mode "default"
#    # bindsym h exec systemctl hibernate, mode "default"
#    bindsym r exec systemctl reboot, mode "default"
#    bindsym Shift+s exec systemctl poweroff, mode "default"
#    bindsym Escape mode "default"
#}

#
# Status Bar:
#
bar {
    swaybar_command waybar
}

# openSUSE theme
#default_border normal
default_border pixel 3
bindsym $mod+g border toggle
bindsym $mod+y gaps toggle
gaps inner 5
gaps outer 5
# gaps inner 10
#smart_gaps inverse_outer
#gaps horizontal 400
#gaps right 960
titlebar_border_thickness 0
titlebar_padding 8 8
#smart_borders on
#hide_edge_borders both


# application border
#for_window [shell=".*"] title_format "゜%title :: %shell :: %app_id :: %class :: %instance"
for_window [shell=".*"] title_format "゜%title :: %shell - %app_id :: %class - %instance"
#for_window [shell="xwayland"] floating disable
#for_window [app_id="firefox"] border none
for_window [class="URxvt"] border none, floating enable
for_window [app_id="qutebrowser"] border none
for_window [app_id="epiphany"] border none
for_window [app_id="chromium-freeworld"] border none
for_window [app_id="chrome-discord.com__app-Default"] border none, shortcuts_inhibitor disable
#for_window [app_id="^chrome-.*-.*$"] shortcuts_inhibitor disable
for_window [app_id="pavucontrol"] floating enable
for_window [app_id="blueman-manager"] floating enable
for_window [app_id="imv"] border normal, floating enable
for_window [app_id="xdg-desktop-portal-gtk"] border normal, floating enable
seat * shortcuts_inhibitor disable
for_window [instance="lxappearance"] floating enable
for_window [title="Save File"] floating enable
for_window [app_id="" title="Picture in picture"] floating enable, sticky enable
for_window [title="Firefox .*— Sharing Indicator"] floating enable, sticky enable
for_window [app_id="firefox" title="^Library$"] floating enable, border pixel 1, sticky enable
for_window [app_id="" title=".* is sharing your screen."] floating enable

#opacity/transparency
for_window [shell=".*"] opacity 0.9
bindsym Mod4+x exec "~/.config/sway/toggle_transparent.sh toggle"

#pywal colors
#exec wal -R
include "$HOME/.cache/wal/colors-sway"
output * bg $wallpaper fill
#output * bg ~/earth_h.jpg tile
#output * bg ~/Downloads/ghibli.jpg tile

# Property Name           Border    BG        Text      Indicator   Child Border
#-----------------------  (title)-  (title)-  (title)-  (new view)  (view)------
#-----------------------  --------  --------  --------  ----------  ------------
client.focused            $color5   $color13  $color0   $color13    $color12
client.focused_inactive   $color1   $color1   $color15  $color3     $color1
client.unfocused          $color1   $color0   $color15  $color1     $color1
client.urgent             $color8   $color8   $color0   $color8     $color8
client.placeholder        $color0   $color0   $color15  $color0     $color0
client.background         $color7


#class 			border  backgr  text    indic	child_border
####################### ############################################
#client.focused          $color0 $background $foreground $color7 $background
#client.focused 		#492765 #492765 #ffffff #a8a0d9
#client.focused_inactive #73332d #73332d #ffffff
#client.unfocused 	#2f343f #2f343f #35b9ab
####################### ############################################
#client.focused 	#843382 #843382 #ffffff #00ffff
#client.focused_inactive #6da741 #00a489 #000000
#client.focused_inactive  #A8A0D9 #A8A0D9 #000000

exec_always {
    systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
    gsettings set org.gnome.desktop.interface gtk-theme 'oomox-colors-oomox-pywal'
    gsettings set org.gnome.desktop.interface icon-theme 'oomox-colors-oomox-pywal'
    gsettings set org.gnome.desktop.interface cursor-theme 'Bibata-Modern-Amber'
    gsettings set org.gnome.desktop.interface font-name 'Sans 10'
    test -e $SWAYSOCK.wob || mkfifo $SWAYSOCK.wob
    tail -f $SWAYSOCK.wob | wob
}

# exec /usr/libexec/polkit-gnome-authentication-agent-1

