#run this to update tmux
#   tmux source-file ~/.tmux.conf

# Initial setup
set -g default-terminal xterm-256color
set -g default-command "${SHELL}"
set-option -ga terminal-overrides ",xterm-256color:Tc"
#set -g status-keys vi
#set -g xterm-keys on
set-option -g update-environment "DISPLAY WAYLAND_DISPLAY SSH_AUTH_SOCK"

# Prefix
unbind-key C-b
set-option -g prefix C-x
bind-key C-x send-prefix
set -g base-index 1

#unbind-key IC
#bind-key IC send 'j'


# Easy config reload
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."


# Easy clear history
bind-key L clear-history


# Lengthen the amount of time status messages are displayed
set-option -g display-time 2000
set-option -g display-panes-time 3000


# Set the base-index to 1 rather than 0
set -g base-index 1
set-window-option -g pane-base-index 1


# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on


# Key bindings for copy-paste
#setw -g mode-keys vi
#unbind [
#unbind ]
#unbind p


# bind-key option
# -N matches only the window name and
# -T matches only the window title
# -n window name


#bind-key Escape copy-mode # tmux prefix + escape starts copy mode
#set-window-option -g mode-keys vi
#bind-key -n C-f copy-mode\; send-key ? #reverse search
#bind-key -n C-x copy-mode\; send-key ? #ctrol+x to look for text
#bind-key y copy-mode # tmux prefix + y starts copy mode
#bind-key p paste-buffer # 'tmux prefix + p' paste the latest buffer

## Double LMB Select & Copy (Word)
#bind-key -n DoubleClick1Pane \
#    select-pane \; copy-mode -M \; send-keys -X select-word \; \
#	run-shell "sleep .5s" \; send-keys -X copy-pipe-and-cancel "wl-copy -p"
#
## Triple LMB Select & Copy (Line)
#bind-key -n TripleClick1Pane \
#    select-pane \; copy-mode -M \; send-keys -X select-line \; \
#	run-shell "sleep .5s" \; send-keys -X copy-pipe-and-cancel "wl-copy -p"

# vim (not vi) visual select mode keys
#bind-key -T copy-mode-vi 'v' send -X begin-selection
#bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle \; send -X begin-selection
#bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
#bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "wl-copy -p"



# Toggle mouse mode
# bind-key m set-option -g mouse on \; set -ga status-bg green \; display-message 'Mouse: ON'
# bind-key M set-option -g mouse off \; set -ga status-bg yellow \; display-message 'Mouse: OFF'
bind-key m set-option mouse\; display-message "Mouse is now #{?mouse,on,off}"

#set-option -g mouse on
 bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
 bind -n WheelDownPane select-pane -t= \; send-keys -M

#bind-key + delete-buffer
set-option -g renumber-windows on


# Emacs bindings #man tmux WINDOWS AND PANES copy-mode
set -g status-keys emacs
setw -g mode-keys emacs
bind -n M-x command-prompt
bind -n M-: command-prompt
bind M-x send-keys "M-x" # Send M-x to emacs
bind M-: send-keys "M-:" # Send M-: to emacs
bind 0 confirm-before -p "kill-pane '#W:#P'? (y/n)" kill-pane
bind 2 split-window -v -c "#{pane_current_path}" #\; select-pane -l
bind 3 split-window -h -c "#{pane_current_path}" #\; select-pane -l
bind-key o select-pane -t :.+  #next pane
#bind -n C-r copy-mode\; send-keys C-r #reverse search

##copy and paste
bind -n M-y choose-buffer
bind -n M-[ copy-mode\; send -X start-of-line
bind -n C-y paste-buffer
bind-key -T copy-mode M-w send-keys -X copy-pipe-and-cancel "wl-copy"
#bind -n C-y run "wl-paste -p | tmux load-buffer - ; tmux paste-buffer"
bind-key -T copy-mode C-Space send -X begin-selection #emacs: C-x space vertical selection
bind-key -T prefix Space copy-mode\; send-keys -X rectangle-toggle \; send -X begin-selection
# needs mouse mode on
bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel "wl-copy"
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(wl-paste -p)\"; tmux paste-buffer"
bind C-r copy-mode\; send-key C-r #reverse search
set-hook -g pane-mode-changed 'if -F "#{m/r:(copy|view)-mode,#{pane_mode}}" "set -g status-bg colour227" "set -g status-bg colour225"'

# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

#C-x b : switch buffers
bind b choose-tree
#C-x right : right-cycle through buffers
#C-x left : left-cycle through buffers
bind -n C-left previous-window
bind -n C-right next-window
#C-x k : kill buffer
bind 0 confirm-before -p "kill-pane '#W:#P'? (y/n)" kill-pane


# bind -T prefix q display-panes #default prefix q binding
bind -n S-Left select-pane -L
bind -n S-Right select-pane -R
bind -n S-Up select-pane -U
bind -n S-Down select-pane -D

# unbind alt+arrows
unbind -n M-Left
unbind -n M-Right
unbind -n M-Up
unbind -n M-Down

# inactive window
#set -g window-style 'bg=#dadada'
#set -g window-active-style 'bg=#f5f5f5'

# transparent window
#set -g window-style 'bg=default'
#set -g window-active-style 'bg=default'

#bind-key f resize-pane -Z
#default bind-key z for full screen

#bind-key -n M-c kill-pane \; select-layout
#bind-key -n M-n split-window \; select-layout
unbind -n i
unbind -n h

#bind-key F12 new-window \; \
#		split-window -h \; split-window -h \; split-window -v \;  \
#		select-pane -t 1 \; split-window -h \; split-window -v \;  \
#		select-pane -t 1 \; split-window -v \;  \
#		select-pane -t 5 \; split-window -v \; select-pane -t 1;

# Allow the arrow key to be used immediately after changing windows.
set-option -g repeat-time 0


#window
# bind-key c  //open new window
# bind-key &  //close current window


# Double press <prefix> to move to last window
# bind-key C-b last-window

# No delay for escape key press
set -sg escape-time 0


# Window activity monitor
setw -g monitor-activity off
set -g visual-activity off


set -g history-limit 10000

# Theme
#set -g window-status-current-bg green
#set -g window-status-current-fg black
#set -g window-status-current-attr bold
#set-option -g message-bg colour237
#set-option -g message-fg colour231
#set-option -g pane-border-fg green
#set-option -g pane-active-border-fg green

set -g pane-border-style fg="green"

# Status Bar
set -g message-style 'fg=black bg=colour225 bold'
set -g mode-style bg=colour227

set -g status-justify centre
set -g status-style fg=black,bg=colour225
set -g status-interval 60


#set -g status-left-length 30
set -g status-left '#{?client_prefix,#[bg=red]#[fg=black],#[bg=colour225]} דּ '
set -ga status-left '#{?window_zoomed_flag,#[bg=yellow]#[fg=black],#[bg=colour225]}  '
set -ga status-left '#[fg=black]#[bg=colour225]  '

#set -g window-status-current-style fg=black,bg=colour14
#set -g window-status-current-style fg=black,bg=colour248
#set -g window-status-style fg=black,bg=default
set -g window-status-current-format "#[fg=colour225]#[bg=#bd93f9]#[fg=#f8f8f2]#[bg=#bd93f9]#I #W #[fg=#bd93f9]#[bg=colour225]"

set -g window-status-format "#[fg=black]#[bg=colour225] #I #W #[fg=colour225]"
set -g status-justify left
set-window-option -g window-status-separator ''

set -g status-right-length 100
#set -g status-right '#[fg=#8be9fd,bg=default]#[fg=#44475a,bg=#8be9fd] Mem: #(tmux-mem-cpu-load -m 2 -g 0 -a 0 -i 3) '
set -ga status-right '#[fg=#ff79c6,bg=#8be9fd]#[fg=#44475a,bg=#ff79c6] #S '
set -ga status-right '#[fg=#bd93f9,bg=#ff79c6]#[fg=#f8f8f2,bg=#bd93f9] #(whoami)@#H #[bg=default]'
#set -ga status-right '#[fg=#ff79c6,bg=#8be9fd]#[fg=#44475a,bg=#ff79c6] #(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") '
#set -ga status-right '#[fg=#bd93f9,bg=#ff79c6]#[fg=#f8f8f2,bg=#bd93f9] %a, %b %d #[fg=black]%I:%M %p'
